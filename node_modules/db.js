var levelup = require('levelup');

module.exports = DB;

function DB(options) {
	this.URI = options.URI;
	this.db = null;
};

DB.prototype.openDatabase = function (callback) {
	levelup(this.URI, {create_if_missing: true, valueEncoding: 'json'}, 
		function (err, db) {
			if(err) return callback(err);
			this.db = db;
			return callback(null);
		}.bind(this));
};

DB.prototype.closeDatabase = function (callback) {
	this.db.close(function (err) {
		if(callback) {
			if(err) return callback(err)
			return callback(null);
		}
	});
};

DB.prototype.popSongFrom = function (name, callback) {
	this.getPlaylist(name, function (err, playlist) {
		if(err) return callback(err);
		var song = playlist.shift();	
		this.storePlaylist(name, {"songs": playlist}, function (err) {
			if(err) return callback(err);	
			return callback(null, song);	
		});
	}.bind(this));
};

DB.prototype.pushSongTo = function (name, song, callback) {
	this.getPlaylist(name, function (err, playlist) {
		if(err) return callback(err);
		playlist.push(song);
		this.storePlaylist(name, {"songs": playlist}, function (err) {
			if(err) return callback(err);
			return callback(null);
		});
	}.bind(this));
};

DB.prototype.createPlaylist = function (name, callback) {
	this.db.put(name, {"songs": []}, function (err) {
		if(err) return callback(err+": createPlaylist");
		return callback(null);
	});
};

DB.prototype.deletePlaylist = function (name, callback) {
	this.db.del(name, function (err) {
		if(err) return callback(err);
	});
};

DB.prototype.getPlaylist = function (name, callback) {
	this.db.get(name, function (err, result) {
		if(err) return callback(err);
		return callback(null, result["songs"]);
	});
};

DB.prototype.storePlaylist = function (name, playlist, callback) {
	this.db.put(name, playlist, function (err) {
		if(err) return callback(err);
		return callback(null);
	});
};

DB.prototype.clearPlaylist = function (name, callback) {
	this.db.put(name, {"songs": []}, function (err) {
                if(err) return callback(err);
                return callback(null);
        });
};

DB.prototype.printAll = function () {
	levelup(this.URI, function (err, db) {
		db.createReadStream()
			.on('data', console.log)
			.on('close', function () {
				db.close()
			});
	});
};

